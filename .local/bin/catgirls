#!/bin/sh

usage() { printf 'usage: %s [-dt]\n' "${0##*/}"; exit; }

TERMINAL="${TERMINAL:-xterm}"

tmux_conf="${XDG_CONFIG_HOME:-~/.config}"/catgirls/tmux.conf
cache="${XDG_CACHE_HOME:-~/.cache}"/catgirls

mkdir -p "${cache}"

# HACK: Arch Linux's libressl is installed in /lib/libressl, this really should be fixed in a
#       package of `catgirl`.
export LD_LIBRARY_PATH=/lib/libressl:/lib

if [ -f "${tmux_conf}" ]; then
    tmux() {
        command tmux -f "${tmux_conf}" "$@"
    }
fi

attach=true
kill_all=false
open_terminal=false
spoiler=false
while getopts :dkst arg >/dev/null 2>&1; do
    case "${arg}" in
        d)
            attach=false
            ;;
        k)
            kill_all=true
            ;;
        s)
            spoiler=true
            ;;
        t)
            open_terminal=true
            ;;
        ?)
            printf 'unknown argument -- %s\n' "${OPTARG}" >&2
            usage
            ;;
    esac
done

unset TMUX

if "${spoiler}"; then
    if [ -f "${cache}"/spoiler ]; then
        tmux send-keys C-z c
        exec rm -f "${cache}"/spoiler
    else
        tmux send-keys C-z c 1,1
        exec touch "${cache}"/spoiler
    fi
    exit $?
fi

if "${kill_all}"; then
    tmux list-windows -F '#S:#I' | while read -r window; do
        tmux send-keys -t "${window}" C-e C-u M-0
    done
    exec tmux detach-client
fi

if "${open_terminal}"; then
    test -n "$(tmux list-clients -F '#S' -t catgirls)" && exec xdotool search --name 'catgirl - .*' windowactivate
    exec "${TERMINAL}" -e catgirls
fi

tmux has-session -t catgirls >/dev/null 2>&1 && "${attach}" && exec tmux attach-session -t catgirls
tmux new-session -d -s catgirls

# Start at 1 so as not to mess with the dummy window.
color_i=1
window_i=1
for f in "${XDG_CONFIG_HOME:-~/.config}"/catgirl/*.conf; do
    server="${f##*/}"; server="${server%%.conf}"
    tmux new-window -t catgirls: -n "${server}" \
        sh -c '(exit 63); while [ $? -eq 63 ]; do catgirl '"'${f}'"' || sleep 15; done'

    # give each window a different color
    case "${color_i}" in
        1) color=blue       ;;
        2) color=green      ;;
        3) color=red        ;;
        4) color=magenta    ;;
        5) color=yellow     ;;
        6) color=cyan       ;;
    esac

    # set terminal title to the selected window's ("catgirl - user@server").
    tmux set-option -t catgirls: -g automatic-rename  off
    tmux set-option -t catgirls: -g set-titles        on
    tmux set-option -t catgirls: -g set-titles-string "catgirl - #W"

    tmux set-option -t catgirls:"${window_i}" -a window-status-style "bg=terminal,fg=${color}"
    tmux set-option -t catgirls:"${window_i}" -a window-status-current-style "bg=terminal,fg=${color},reverse"
    tmux set-option -t catgirls:"${window_i}" -a window-status-activity-style "bg=terminal,fg=${color}"
    tmux set-option -t catgirls:"${window_i}" remain-on-exit on

    color_i=$(( color_i + 1 ))
    window_i=$(( window_i + 1 ))
    [ $color_i -gt 6 ] && color_i=1
done

# Kill the dummy window that was started when tmux started.
tmux kill-window -t catgirls:0

tmux select-window -t catgirls:0

"${attach}" && exec tmux -f "${tmux_conf}" attach-session -t catgirls
