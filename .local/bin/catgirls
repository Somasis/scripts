#!/bin/sh

usage() { printf 'usage: %s [-cds]\n' "${0##*/}"; exit; }

: "${XDG_CONFIG_HOME:=~/.config}"
: "${XDG_CACHE_HOME:-~/.cache}"
tmux_conf="${XDG_CONFIG_HOME}"/catgirls/tmux.conf
cache="${XDG_CACHE_HOME}"/catgirls
mkdir -p "${cache}"

[ -f "${tmux_conf}" ] || unset tmux_conf

tmux() {
    # Use a separate socket so as to prevent `tmux` from creating
    # windows in our session by default.
    command tmux ${tmux_conf:+-f "$tmux_conf"} -L catgirls "$@"
}

attach=true
close=false
spoiler=false
while getopts :cds arg >/dev/null 2>&1; do
    case "${arg}" in
        c)
            close=true
            ;;
        d)
            attach=false
            ;;
        s)
            spoiler=true
            ;;
        ?)
            printf 'unknown argument -- %s\n' "${OPTARG}" >&2
            usage
            ;;
    esac
done

unset TMUX

# Provide black fg/black bg toggling as a "spoiler function"
tmux set-hook -g client-detached "run-shell { rm -f \"${cache}\"/spoiler; catgirls -c }"
if "${spoiler}"; then
    if [ -f "${cache}"/spoiler ]; then
        tmux send-keys C-z c
        exec rm -f "${cache}"/spoiler
    else
        tmux send-keys C-z c 1,1
        exec touch "${cache}"/spoiler
    fi
    exit $?
fi

if "${close}"; then
    tmux list-windows -F '#S:#I' | while read -r window; do
        tmux send-keys -t "${window}" C-e C-u M-0 C-y
    done
    exec tmux -L catgirls detach-client
fi

tmux has-session -t catgirls >/dev/null 2>&1 && "${attach}" && \
    exec tmux -L catgirls attach-session -t catgirls
tmux new-session -d -s catgirls

# Start at 1 so as not to mess with the dummy window.
color_i=1
window_i=1
for f in "${XDG_CONFIG_HOME}"/catgirl/*.conf; do
    server="${f##*/}"; server="${server%%.conf}"
    tmux new-window -t catgirls: -n "${server}" \
        sh -c '(exit 63); while [ $? -eq 63 ]; do catgirl '"'${f}'"' || sleep 1; done'

    # set terminal title to the selected window's ("catgirl - user@server").
    tmux set-option -t catgirls: -g automatic-rename  off
    tmux set-option -t catgirls: -g set-titles        on
    tmux set-option -t catgirls: -g set-titles-string "catgirl - #W"

    tmux set-option -t catgirls:"${window_i}" remain-on-exit on

    window_i=$(( window_i + 1 ))
done

# Kill the dummy window that was started when tmux started.
tmux kill-window -t catgirls:0
tmux select-window -t catgirls:0

# Sort the windows by the order they're in in ~/.config/catgirls/order.
if [ -e "${XDG_CONFIG_HOME}"/catgirls/order ]; then
    order_i=0
    while read -r title; do
        tmux swap-window -d \
            -s ":$(tmux list-windows -F '#I:#W' | grep ":${title}$" | cut -d: -f1)" \
            -t :"${order_i}"
        order_i=$(( order_i + 1 ))
    done < "${XDG_CONFIG_HOME}"/catgirls/order
    tmux move-window -r
    tmux select-window -t catgirls:0
fi

# Color windows individually, since they are now ordered
color_i=1
window_i=0
tmux list-windows -F '#I' | while read -r window; do
    # give each window a different color
    case "${color_i}" in
        1) color=blue       ;;
        2) color=green      ;;
        3) color=red        ;;
        4) color=magenta    ;;
        5) color=yellow     ;;
        6) color=cyan       ;;
    esac

    tmux set-option -t catgirls:"${window_i}" \
        -a window-status-style "bg=terminal,fg=${color}"
    tmux set-option -t catgirls:"${window_i}" \
        -a window-status-current-style "bg=terminal,fg=${color},reverse"
    tmux set-option -t catgirls:"${window_i}" \
        -a window-status-activity-style "bg=terminal,fg=${color}"
    tmux set-option -t catgirls:"${window_i}" remain-on-exit on

    color_i=$(( color_i + 1 ))
    window_i=$(( window_i + 1 ))
    [ $color_i -gt 6 ] && color_i=1
done

"${attach}" && exec tmux ${tmux_conf:+-f "$tmux_conf"} -L catgirls attach-session -t catgirls
