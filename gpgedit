#!/bin/sh
# gpgedit - create/edit a gpg-encrypted file

me="${0##*/}"

default_key=$(sed -E '/^default-key /!d; s/^default-key[ \t]+//' $(gpgconf --list-dirs homedir)/gpg.conf)
recipient="${default_key}"

edit() {
    if ! ${EDITOR} "${1}";then
        err=$?
        printf 'Editor exited with error code %s, removing decrypted copies and exiting\n' "${err}" >&2
        rm -f "${file_to_compare}" "${file_to_edit}"
        exit ${err}
    fi
}

help() {
    printf '%s [-r <recipient>|--recipient <recipient>] <file ...>\n' "${me}" >&2
}

case "$1" in
    -r|--recipient)
        [ -z "$2" ] && help && exit 1
        recipient="$2"; shift 2
    ;;
    --help)
        help
        exit 1
    ;;
esac

until [ $# -eq 0 ];do
    if [ -f "${1}" ];then
        if ! gpg --no-tty --batch -q -d "${1}" >/dev/null 2>&1;then
            printf "File '%s' either isn't an encrypted file, or we don't have the key to decrypt it.\n" "${1}" >&2
            exit 13
        fi

        key=$(gpg --batch --list-packets "${1}" | sed -E '/^:pubkey/!d; s/.* keyid //')
        [ -n "${key}" ] && key="0x${key}" || key="${recipient}"
        file_to_edit=$(mktemp)
        file_to_compare=$(mktemp)
        chmod 600 "${file_to_edit}" "${file_to_compare}"
        gpg --no-tty --batch -q -u "${key}" --decrypt "${1}" > "${file_to_edit}"

        edit "${file_to_edit}"

        if ! cmp "${file_to_edit}" "${file_to_compare}" >/dev/null 2>&1;then
            if gpg --batch --yes -r "${key}" -o "${1}" --encrypt "${file_to_edit}";then
                rm -f "${file_to_compare}" "${file_to_edit}"
                printf "File '%s' modified\n" "${1}" >&2
            fi
        else
            rm -f "${file_to_compare}" "${file_to_edit}"
            printf "File '%s' unchanged\n" "${1}" >&2
        fi
    else
        file_to_edit=$(mktemp)
        chmod 600 "${file_to_edit}"
        edit "${file_to_edit}"

        gpg --batch --yes -r "${default_key}" -o "${1}" --encrypt "${file_to_edit}"
        rm -f "${file_to_compare}" "${file_to_edit}"
        printf "File '%s' created\n" "${1}" >&2
    fi

    shift
done
