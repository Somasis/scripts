#!/bin/sh
# todo - maintain a todo list
#
# Copyright 2017-2018 Kylie McClain <kylie@somas.is>
# Distributed under the terms of the 0BSD license

todo=~/.todo.md

msg() {
    printf '%s: %s\n' "${0##*/}" "$*" >&2
}

isnum() {
    if [ -z "$(printf '%s' $@ | tr -d '[0-9]')" ];then
        return 0
    fi
    return 1
}

set -e

if ! [ -e "${todo}" ];then
    touch "${todo}"
    msg "created list at \"${todo}\""
fi

case "${1}" in
    ''|--list)
        cat "${todo}"
    ;;
    --done)
        shift
        if [ $# -lt 1 ];then
            msg '%s: --done requires an item number or a grep query\n' "${0##*/}" >&2
            exit 127
        fi
        if isnum "${1}";then
            item_amount=$(wc -l "${todo}" | cut -d' ' -f1)
            if [ "${1}" -lt 1 ] || [ ${item_amount} -lt "${1}" ];then
                msg "given number is out of range of the amount of items on the list"
                exit 2
            fi
            item_contents=$(sed "${1}!d;s/^- //" "${todo}")
            sed "${1}d" -i "${todo}"
        else
            todo_tmp=$(mktemp)
            cat "${todo}" > "${todo_tmp}"
            item_contents=$(grep -- "${1}" "${todo_tmp}" | sed '1!d;s/^- //')
            grep -vF -- "- ${item_contents}" "${todo_tmp}" > "${todo}"
            rm -f "${todo_tmp}"
        fi
        msg "done with \"${item_contents}\""
        cat "${todo}"
    ;;
    --edit)
        "${EDITOR:-vi}" "${todo}"
    ;;
    --help)
        printf '%s [todo item, without quotes]\n' "${0##*/}"
        printf '    %s - %s\n' \
            --list "List todo item; same as providing no arguments" \
            --edit "Open the todo list in your \$EDITOR (currently '${EDITOR}')"
        printf '    %s %s - %s\n' \
            --done "<grep query or item number>" "Remove an item from the list" \
            --add "<todo item(s)>" "Interpret all arguments as separate items to be added to list"
        printf '\n'
        printf '    When ran without arguments, the arguments will be interpreted as a single todo item.\n'
    ;;
    --add)
        shift
        if [ $# -lt 1 ];then
            msg '%s: --add requires at least one todo item\n' "${0##*/}" >&2
            exit 127
        fi
        until [ $# -eq 0 ];do
            msg "added \"$1\" to list"
            printf '- %s\n' "$*" >> "${todo}"
            shift
        done
        cat "${todo}"
    ;;
    *)
        msg "added \"$*\" to list"
        printf -- '- %s\n' "$*" >> "${todo}"
        cat "${todo}"
    ;;
esac

