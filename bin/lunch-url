#!/bin/sh

real_browser="/usr/share/qutebrowser/scripts/open_url_in_instance.sh"

if [ "$#" -gt 1 ]; then
    while [ $# -gt 0 ]; do
        lunch-url "$1"
        e=$?
        case "$e" in
            0 | 55) : ;;
            *)      exit $e ;;
        esac
        shift
    done
    exit
elif [ "$#" -eq 0 ]; then
    nohup "${real_browser}" "${url}" >/dev/null 2>&1 &
    exit
    # printf 'usage: %s [URL...]\n' "${0##*/}" >&2
    # exit 69 # EX_USAGE
fi

set -u

# ytdata JQ_ARGS...
ytdata() {
    [ -s "${ytdata}" ] || youtube-dl -j "${url}" >"${ytdata}"
    jq "$@" <"${ytdata}"
}

ytdata=$(mktemp)

url="${1}"
url_unique=$(printf '%s\n' "${url}" | sed -E '/https?:\/\// { s|https?://||; s/www\.// }')
url_pretty="${url_unique}"
url_stream=false

case "${url_unique}" in
    youtube.com/watch\?*v=* | youtu.be/*)
        choices="media_player browser"
        url_stream=true
        url_pretty=$(ytdata -r "\"youtube: \" + .title")
        ;;

    twitch.tv/*)
        choices="media_player browser"
        url_pretty=$(ytdata -r "\"twitch: \" + .title")
        ;;

    *.bandcamp.com/album/*)
        choices="media_player browser"

        # TODO: this would be a nice solution, but youtube-dl's bandcamp extractor doesn't seem to
        #       include release artists (vs. track artists) in the JSON?
        # url_pretty=$(ytdata -r "\"bandcamp: \" + .releasetitle")
        url_pretty=$(
            curl -Lsf "${url}" \
                | pup 'script[type=application/ld+json]' \
                | tr -d '\n' \
                | sed -E 's|<script[^>]+>(.*)</script>|\1|' \
                | jq -r "\"bandcamp: \" + .byArtist.name + \" - \" + .albumRelease[].name"
        )
        ;;

    *.bandcamp.com/track/*)
        choices="media_player browser"
        url_stream=true
        url_pretty=$(ytdata -r "\"bandcamp: \" + .title + \" (from '\" + .album + \"')\"")
        ;;

    soundcloud.com/*)
        choices="media_player browser"
        url_pretty=$(ytdata -r "\"soundcloud: \" + .uploader + \" - \" + .title")
        ;;

    *) choices="browser" ;;
esac

rm -f "${ytdata}"

set -- ${choices}

choice="${choices}"
[ $# -gt 1 ] && choice=$(printf '%s\n' "$@" | dmenu -p "lunch[${url_pretty}]" || exit 55)

case "${choice}" in
    browser)
        nohup "${real_browser}" "${url}" >/dev/null 2>&1 &
        exit
        ;;
    '')
        exit 55
        ;;
    media_player)
        if [ "${url_stream}" = true ]; then
            youtube-dl -o - "${url}" | $(lunch -g media_player) --title="${url_pretty}" -
        else
            lunch -o media_player "${url}"
        fi
        ;;
    *)
        exec lunch -o "${choice}" "${url}"
        ;;
esac
