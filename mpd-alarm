#!/usr/bin/env bash
# mpd-alarm -- A script to turn the Music Player Daemon into an alarm
#
# Copyright 2014-2015 Kylie McClain <somasis@exherbo.org>
# Distributed under the terms of the ISC License
# https://github.com/somasis/scripts/

MPD_HOST="localhost" # host for mpc to use to connect
MPD_PORT=6600 # port mpd server is on, 6600 is default

use_repeat=true # put mpd server into repeat mode?
use_playlist=true # use a playlist for alarm music, or just use entire library
alarm_playlist="Alarm" # name of alarm playlist
previous_playlist="Previous" # name of playlist before alarm

sound_system="pulseaudio" # alsa, oss, or pulseaudio
pulse_output=$(echo $(pactl list sinks short | head -n1) | cut -d' ' -f1)
alsa_channel="Master"
oss_output="vmix0-outvol"

stderr() { # stderr <msg>
    echo "$@" >&2
}

die() { # die <err msg> <err code> or die <err code>
    if [[ "$#" -gt 1 ]];then
        local err_msg="$1"
        local err_code="$2"
        stderr "$me: $err_msg; dying"
    else
        local err_code="$1"
    fi
    exit $err_code
}

XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}"
config_location="$XDG_CONFIG_HOME/mpd-alarm.conf"

[[ -f "$config_location" ]] && . "$config_location"

[[ "$MPD_HOST" ]] && echo "Host: $MPD_HOST"
[[ "$alarm_playlist" ]] && echo "Alarm playlist: $alarm_playlist"
[[ "$previous_playlist" ]] && echo "Previous: $previous_playlist"
if [[ "$sound_system" == "pulseaudio" ]];then
    echo "PulseAudio output: $pulse_output"
elif [[ "$sound_system" == "alsa" ]];then
    echo "ALSA channel: $alsa_channel"
elif [[ "$sound_system" == "oss" ]];then
    echo "OSS output: $oss_output"
else
    die "Unknown sound system." 2
fi

mpc() {
    MPD_HOST="${MPD_HOST:-localhost}"
    MPD_PORT="${MPD_PORT:-6600}"
    command mpc -h "$MPD_HOST" -p "$MPD_PORT" "$@"
}

if [[ -z "$(pgrep mpd)" ]];then
    echo "MPD isn't running, starting it..."
    mpd
fi

echo "Saving current playlist to \"$previous_playlist\"..."
mpc rm "$previous_playlist"
mpc save "$previous_playlist"
echo "Setting volume to 100%..."
mpc volume 100
if [[ "$sound_system" == "pulseaudio" ]];then
    pactl set-sink-mute "$pulse_output" false
    pactl set-sink-volume "$pulse_output" 100%
elif [[ "$sound_system" == "alsa" ]];then
    amixer set "$alsa_channel" on
    amixer set "$alsa_channel" 100%
elif [[ "$sound_system" == "oss" ]];then
    ossmix "$oss_output" 100
fi

if [[ "$use_playlist" == true ]];then
    echo "Loading alarm playlist \"$alarm_playlist\"..."
    mpc clear
    mpc load "$alarm_playlist"
else
    echo "Adding entire library and shuffling..."
    mpc clear
    mpc listall | mpc add
    mpc shuffle
fi

[[ "$use_repeat" == true ]] && mpc repeat on
echo "Playing..."
mpc play
echo
echo "I hope you slept well :)"
