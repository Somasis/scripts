#!/usr/bin/env bash
# sort_mirrors - rank the list of openbsd mirrors
#
# Copyright 2014-2015, Kylie McClain <somasissounds@gmail.com>
# Distributed under the terms of the ISC License
# https://github.com/somasis/scripts/

release_number=5.5
#export_to_file=/etc/
export_to_file=

non_rsync_gettime() {
    begin_time=$(date +"%s.%N")
    ftp -o - -r 5 "$mirror" >/dev/stderr || begin_time=$(( $(date +%s) * 1000 ))
    end_time=$(date +"%s.%N")
    total=$(echo "scale=2;$end_time-$begin_time" | bc)
    if [[ "$total" == -* ]];then
        total=9999999999999999999999999999999999999999
    fi
    echo "$total $mirror"
}

rsync_gettime() {
    begin_time=$(date +"%s.%N")
    rsync --timeout=5 "$mirror" >/dev/stderr || begin_time=$(( $(date +%s) * 1000 ))
    end_time=$(date +"%s.%N")
    total=$(echo "scale=2;$end_time-$begin_time" | bc)
    if [[ "$total" == -* ]];then
        total=9999999999999999999999999999999999999999
    fi
    echo "$total $mirror"
}

get_mirror_list() {
    ftp -o - "http://www.openbsd.org/build/mirrors.dat" | sed '/:\/\//!d;s/^#..//;s/^[[:alpha:]][[:alpha:]]//;s/^[ \t]*//' | jot | jot | jot | jot
}

measure_mirrors() {
    for mirror in $(get_mirror_list);do
        case "$mirror" in
            http*|ftp*)
            non_rsync_gettime "$mirror"
            ;;
            rsync*)
            rsync_gettime "$mirror"
            ;;
            *)
            non_rsync_gettime "$mirror" || rsync_gettime "$mirror"
            ;;
        esac
    done
}

mirrors_sorted=$(measure_mirrors | sort -n)
mirrors_in_order=$(echo "$mirrors_sorted" | cut -d' ' -f2-)
final_mirrors_list=$(for mirror in $mirrors_in_order;do
    echo "${mirror}$release_number/packages/$(machine -a 2>/dev/null || (uname -m | sed 's/x86_64/amd64/' 2>/dev/null))"
done | tr '\n' ':' | sed 's/:$//')

if [[ ! -z "$export_to_file" ]];then
    if [[ "$file_write_method" == "append" ]];then
        printf "export PKG_PATH=\"$final_mirrors_list\"\n\n" >> "$export_to_file"
        echo "Appended new ranked mirror list to \"$export_to_file\"."
    elif [[ "$file_write_method" == "overwrite" ]]
        printf "export PKG_PATH=\"$final_mirrors_list\"\n\n" > "$export_to_file"
        echo "Wrote new ranked mirror list to \"$export_to_file\"."
    else
        printf "export PKG_PATH=\"$final_mirrors_list\"\n\n" >> "$export_to_file"
        echo "Appended new ranked mirror list to \"$export_to_file\"." 2>
    fi
else
    echo "export PKG_PATH=\"$final_mirrors_list\""
fi
echo
