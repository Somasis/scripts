#!/bin/bash
# oldnotifier -- notifier for The Old Reader
# (c) 2014 Somasis <somasissounds@gmail.com> - MIT License

## Don't change these variables, use $XDG_CONFIG_HOME/oldnotifier.conf for your own settings!
email=
password=
notify_for="total"
notify_every="30m"
wait_until_top_of_hour="false"
retrieve_preference='wget'
icon='internet-feed-reader'
user_agent="oldnotifier - https://github.com/Somasis/scripts"


script_description="A notifier for The Old Reader."
script_credit="Written by Somasis <https://github.com/somasis>, MIT license."

SCRIPT_DIR=$(cd "$(dirname "$0")"; pwd)

. "$SCRIPT_DIR/common.sh" 2>&1 >/dev/null
. "$XDG_CONFIG_HOME/oldnotifier.conf" 2>&1 >/dev/null

show_help

if ! command -v notify-send 2>&1 >/dev/null;then
    echo "\`notify-send\` is not installed, it is needed for notifications."
    echo "Try looking for a package named \"libnotify-bin\", \"libnotify\", or \"notify-osd\"."
    exit 6
fi

if [[ "$email" != *@* ]];then
    echo "You must supply an email"
    exit 1
fi

if [[ "$wait_until_top_of_hour" == "true" ]];then
    current_epoch=$(date +"%s")
    target_epoch=$(date -d "$(( $(date +%H) + 1 )):00:00" +%s)
    sleep_seconds=$(( $target_epoch - $current_epoch ))
    echo "Waiting until $(date +$(( $(date +%H) + 1 )):00)..."
    sleep "$sleep_seconds"
fi

key=$(retrieve --post-data="client=oldnotifier&Email=$email&Passwd=$password" "https://theoldreader.com/accounts/ClientLogin" | grep "^Auth=" | cut -d'=' -f2)

if [[ -z "$key" ]];then
    echo "Key is invalid, check your password or email configuration"
    exit 2
fi

while true; do
    unread_raw=$(retrieve --header-data="Authorization: GoogleLogin auth=$key" "https://theoldreader.com/reader/api/0/unread-count?output=json" | sed 's/[0-9],/&,\n/g' | sed 's/","count":/:/g;s/.*id":"//g;s/,,//g;s/.*}]}//;s/{"//g;s/":/:/g' | grep -v '^$')
    if [[ -z "$unread_raw" ]];then
        echo "Failed to get unread count, run this script with bash -x to get debug output"
        exit 3
    fi

    unread_total=$(echo "$unread_raw" | grep "^max:" | cut -d':' -f2)
    unread_feeds=$(echo "$unread_raw" | grep '^feed/' | cut -d'/' -f2 | tr '\n' ',')
    unread_labels=$(echo "$unread_raw" | grep 'label/' | cut -d'/' -f4 | tr '\n' ',')
    
    unread_other=$(OLDIFS="$IFS"
    IFS=","
    for unread_label in $unread_labels;do
        unread_label_name=$(echo "$unread_label" | cut -d':' -f1)
        unread_label_count=$(echo "$unread_label" | cut -d':' -f2)
        if [[ "$unread_label_count" -gt 0 ]];then
            if [[ "$unread_label_count" -gt 1 ]];then
                article_word="articles"
                grammar_ugh="are"
            else
                article_word="article"
                grammar_ugh="is"
            fi
            echo "There $grammar_ugh $unread_label_count unread $article_word in $unread_label_name."
        fi
    done
    IFS="$OLDIFS"
    OLDIFS=
    )
    
    if [[ "$unread_total" -gt 0 ]];then
        if [[ "$unread_total" -gt 1 ]];then
            article_word="articles"
        else
            article_word="article"
        fi
        notify-send -i "$icon" "The Old Reader" "You have $unread_total unread $article_word.\n$unread_other"
        echo -e "You have $unread_total unread $article_word.
$unread_other"
    fi

    
    sleep "$notify_every"
done